# MySQL. Versions 5.5.8 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem 'mysql2'
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
default: &default
  adapter: mysql2
  encoding: utf8mb4
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: root
  password: password
  host: localhost

development:
  <<: *default
  database: sensors_development

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: sensors_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
#production:
#  <<: *default
#  database: sensors_production
#  username: sensors
#  password: <%#= ENV['SENSORS_DATABASE_PASSWORD'] %>

production:
#  url: <%#= ENV['DATABASE_URL'] %>
#  sslca: cleardb-ca.pem
#  sslcert: bfe04df7ca1774-cert.pem
#  sslkey: bfe04df7ca1774-key-no-password.pem
  url: mysql2://bfe04df7ca1774:2e523a08@us-cdbr-east-03.cleardb.com/heroku_f249559aa899c1c?sslcert=bfe04df7ca1774-cert.pem&sslca=cleardb-ca.pem&sslkey=bfe04df7ca1774-key-no-password.pem&reconnect=true